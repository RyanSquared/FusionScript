-- unary operators --

a = (!(#(-(~(1)))));

-- binary operators --

-- arithmetic --

b = (+ 1 2);
c = (- 3 4);
d = (* 5 6);
e = (/ 7 (// 8 9));
f = (% 7 2);
g = (^ 2 10);

-- bitwise --

a = (& (| 1 2) 3);
b = (<< 1 (>> 2 3));

-- equality --

a = (== 1 2);
b = (!= 3 4);
c = (< 5 6);
d = (<= 7 8);
e = (> 9 10);
f = (>= 11 12);

-- logical --

a = (&& b c);
b = (|| d e);

-- misc --

a = (.. "hello" 'world');

-- ternary operator --

using ternary;

async test()-> {
	yield true;
	error(); -- will error if using an `a() and b or not a() and c` method
}

a = test();

print((?: a() "is-working" "is-not-working"));
